# Makefile.in generated by automake 1.11.3 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
@ENTERPRISE_TRUE@am__append_1 = conf/entitlement.py
subdir = pykolab
DIST_COMMON = $(am__pykolab_conf_PYTHON_DIST) $(pykolab_PYTHON) \
	$(pykolab_auth_PYTHON) $(pykolab_auth_ldap_PYTHON) \
	$(pykolab_cli_PYTHON) $(pykolab_clitelemetry_PYTHON) \
	$(pykolab_imap_PYTHON) $(pykolab_plugins_PYTHON) \
	$(pykolab_plugins_defaultfolders_PYTHON) \
	$(pykolab_plugins_dynamicquota_PYTHON) \
	$(pykolab_plugins_recipientpolicy_PYTHON) \
	$(pykolab_setup_PYTHON) $(pykolab_tests_PYTHON) \
	$(pykolab_tests_imap_PYTHON) $(pykolab_tests_wap_PYTHON) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/constants.py.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES = constants.py
CONFIG_CLEAN_VPATH_FILES =
SOURCES =
DIST_SOURCES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__py_compile = PYTHON=$(PYTHON) $(SHELL) $(py_compile)
am__installdirs = "$(DESTDIR)$(pykolabdir)" \
	"$(DESTDIR)$(pykolab_authdir)" \
	"$(DESTDIR)$(pykolab_auth_ldapdir)" \
	"$(DESTDIR)$(pykolab_clidir)" \
	"$(DESTDIR)$(pykolab_clitelemetrydir)" \
	"$(DESTDIR)$(pykolab_confdir)" "$(DESTDIR)$(pykolab_imapdir)" \
	"$(DESTDIR)$(pykolab_pluginsdir)" \
	"$(DESTDIR)$(pykolab_plugins_defaultfoldersdir)" \
	"$(DESTDIR)$(pykolab_plugins_dynamicquotadir)" \
	"$(DESTDIR)$(pykolab_plugins_recipientpolicydir)" \
	"$(DESTDIR)$(pykolab_setupdir)" \
	"$(DESTDIR)$(pykolab_testsdir)" \
	"$(DESTDIR)$(pykolab_tests_imapdir)" \
	"$(DESTDIR)$(pykolab_tests_wapdir)"
am__pykolab_conf_PYTHON_DIST = conf/defaults.py conf/__init__.py \
	conf/entitlement.py
py_compile = $(top_srcdir)/py-compile
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALL_LINGUAS = @ALL_LINGUAS@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DATADIRNAME = @DATADIRNAME@
DATESTAMP = @DATESTAMP@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GETTEXT_PACKAGE = @GETTEXT_PACKAGE@
GMOFILES = @GMOFILES@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSTOBJEXT = @INSTOBJEXT@
INTLLIBS = @INTLLIBS@
INTLTOOL_EXTRACT = @INTLTOOL_EXTRACT@
INTLTOOL_MERGE = @INTLTOOL_MERGE@
INTLTOOL_PERL = @INTLTOOL_PERL@
INTLTOOL_UPDATE = @INTLTOOL_UPDATE@
INTLTOOL_V_MERGE = @INTLTOOL_V_MERGE@
INTLTOOL_V_MERGE_OPTIONS = @INTLTOOL_V_MERGE_OPTIONS@
INTLTOOL__v_MERGE_ = @INTLTOOL__v_MERGE_@
INTLTOOL__v_MERGE_0 = @INTLTOOL__v_MERGE_0@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MKINSTALLDIRS = @MKINSTALLDIRS@
MSGFMT = @MSGFMT@
MSGFMT_OPTS = @MSGFMT_OPTS@
MSGMERGE = @MSGMERGE@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
POFILES = @POFILES@
POSUB = @POSUB@
PO_IN_DATADIR_FALSE = @PO_IN_DATADIR_FALSE@
PO_IN_DATADIR_TRUE = @PO_IN_DATADIR_TRUE@
PYTHON = @PYTHON@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
RELEASE = @RELEASE@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
XGETTEXT = @XGETTEXT@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
intltool__v_merge_options_ = @intltool__v_merge_options_@
intltool__v_merge_options_0 = @intltool__v_merge_options_0@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
pykolabdir = $(pythondir)/$(PACKAGE)
pykolab_PYTHON = $(wildcard *.py)
pykolab_authdir = $(pythondir)/$(PACKAGE)/auth
pykolab_auth_PYTHON = \
	auth/__init__.py

pykolab_auth_ldapdir = $(pythondir)/$(PACKAGE)/auth/ldap
pykolab_auth_ldap_PYTHON = \
	auth/ldap/__init__.py \
	auth/ldap/cache.py

pykolab_clidir = $(pythondir)/$(PACKAGE)/cli
pykolab_cli_PYTHON = \
	$(wildcard cli/*.py)

pykolab_clitelemetrydir = $(pythondir)/$(PACKAGE)/cli/telemetry
pykolab_clitelemetry_PYTHON = \
	$(wildcard cli/telemetry/*.py)

pykolab_confdir = $(pythondir)/$(PACKAGE)/conf
pykolab_conf_PYTHON = conf/defaults.py conf/__init__.py \
	$(am__append_1)
pykolab_imapdir = $(pythondir)/$(PACKAGE)/imap
pykolab_imap_PYTHON = \
	imap/__init__.py \
	imap/cyrus.py

pykolab_pluginsdir = $(pythondir)/$(PACKAGE)/plugins
pykolab_plugins_PYTHON = \
	plugins/__init__.py

pykolab_plugins_defaultfoldersdir = $(pythondir)/$(PACKAGE)/plugins/defaultfolders
pykolab_plugins_defaultfolders_PYTHON = \
	plugins/defaultfolders/__init__.py

pykolab_plugins_dynamicquotadir = $(pythondir)/$(PACKAGE)/plugins/dynamicquota
pykolab_plugins_dynamicquota_PYTHON = \
	plugins/dynamicquota/__init__.py

pykolab_plugins_recipientpolicydir = $(pythondir)/$(PACKAGE)/plugins/recipientpolicy
pykolab_plugins_recipientpolicy_PYTHON = \
	plugins/recipientpolicy/__init__.py

pykolab_setupdir = $(pythondir)/$(PACKAGE)/setup
pykolab_setup_PYTHON = \
	setup/components.py \
	setup/setup_freebusy.py \
	setup/setup_imap.py \
	setup/setup_kolabd.py \
	setup/setup_ldap.py \
	setup/setup_mta.py \
	setup/setup_mysql.py \
	setup/setup_roundcube.py \
	setup/setup_zpush.py \
	setup/__init__.py

pykolab_testsdir = $(pythondir)/$(PACKAGE)/tests
pykolab_tests_PYTHON = \
	$(wildcard tests/*.py)

pykolab_tests_imapdir = $(pythondir)/$(PACKAGE)/tests/imap
pykolab_tests_imap_PYTHON = \
	$(wildcard tests/imap/*.py)

pykolab_tests_wapdir = $(pythondir)/$(PACKAGE)/tests/wap
pykolab_tests_wap_PYTHON = \
	$(wildcard tests/wap/*.py)

all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu pykolab/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu pykolab/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
constants.py: $(top_builddir)/config.status $(srcdir)/constants.py.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-pykolabPYTHON: $(pykolab_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(pykolabdir)" || $(MKDIR_P) "$(DESTDIR)$(pykolabdir)"
	@list='$(pykolab_PYTHON)'; dlist=; list2=; test -n "$(pykolabdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for file in $$list2; do echo $$file; done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pykolabdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pykolabdir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  $(am__py_compile) --destdir "$(DESTDIR)" \
	                    --basedir "$(pykolabdir)" $$dlist; \
	else :; fi

uninstall-pykolabPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(pykolab_PYTHON)'; test -n "$(pykolabdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	dir='$(DESTDIR)$(pykolabdir)'; \
	filesc=`echo "$$files" | sed 's|$$|c|'`; \
	fileso=`echo "$$files" | sed 's|$$|o|'`; \
	st=0; \
	for files in "$$files" "$$filesc" "$$fileso"; do \
	  $(am__uninstall_files_from_dir) || st=$$?; \
	done; \
	exit $$st
install-pykolab_authPYTHON: $(pykolab_auth_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(pykolab_authdir)" || $(MKDIR_P) "$(DESTDIR)$(pykolab_authdir)"
	@list='$(pykolab_auth_PYTHON)'; dlist=; list2=; test -n "$(pykolab_authdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for file in $$list2; do echo $$file; done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pykolab_authdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pykolab_authdir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  $(am__py_compile) --destdir "$(DESTDIR)" \
	                    --basedir "$(pykolab_authdir)" $$dlist; \
	else :; fi

uninstall-pykolab_authPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(pykolab_auth_PYTHON)'; test -n "$(pykolab_authdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	dir='$(DESTDIR)$(pykolab_authdir)'; \
	filesc=`echo "$$files" | sed 's|$$|c|'`; \
	fileso=`echo "$$files" | sed 's|$$|o|'`; \
	st=0; \
	for files in "$$files" "$$filesc" "$$fileso"; do \
	  $(am__uninstall_files_from_dir) || st=$$?; \
	done; \
	exit $$st
install-pykolab_auth_ldapPYTHON: $(pykolab_auth_ldap_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(pykolab_auth_ldapdir)" || $(MKDIR_P) "$(DESTDIR)$(pykolab_auth_ldapdir)"
	@list='$(pykolab_auth_ldap_PYTHON)'; dlist=; list2=; test -n "$(pykolab_auth_ldapdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for file in $$list2; do echo $$file; done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pykolab_auth_ldapdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pykolab_auth_ldapdir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  $(am__py_compile) --destdir "$(DESTDIR)" \
	                    --basedir "$(pykolab_auth_ldapdir)" $$dlist; \
	else :; fi

uninstall-pykolab_auth_ldapPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(pykolab_auth_ldap_PYTHON)'; test -n "$(pykolab_auth_ldapdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	dir='$(DESTDIR)$(pykolab_auth_ldapdir)'; \
	filesc=`echo "$$files" | sed 's|$$|c|'`; \
	fileso=`echo "$$files" | sed 's|$$|o|'`; \
	st=0; \
	for files in "$$files" "$$filesc" "$$fileso"; do \
	  $(am__uninstall_files_from_dir) || st=$$?; \
	done; \
	exit $$st
install-pykolab_cliPYTHON: $(pykolab_cli_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(pykolab_clidir)" || $(MKDIR_P) "$(DESTDIR)$(pykolab_clidir)"
	@list='$(pykolab_cli_PYTHON)'; dlist=; list2=; test -n "$(pykolab_clidir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for file in $$list2; do echo $$file; done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pykolab_clidir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pykolab_clidir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  $(am__py_compile) --destdir "$(DESTDIR)" \
	                    --basedir "$(pykolab_clidir)" $$dlist; \
	else :; fi

uninstall-pykolab_cliPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(pykolab_cli_PYTHON)'; test -n "$(pykolab_clidir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	dir='$(DESTDIR)$(pykolab_clidir)'; \
	filesc=`echo "$$files" | sed 's|$$|c|'`; \
	fileso=`echo "$$files" | sed 's|$$|o|'`; \
	st=0; \
	for files in "$$files" "$$filesc" "$$fileso"; do \
	  $(am__uninstall_files_from_dir) || st=$$?; \
	done; \
	exit $$st
install-pykolab_clitelemetryPYTHON: $(pykolab_clitelemetry_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(pykolab_clitelemetrydir)" || $(MKDIR_P) "$(DESTDIR)$(pykolab_clitelemetrydir)"
	@list='$(pykolab_clitelemetry_PYTHON)'; dlist=; list2=; test -n "$(pykolab_clitelemetrydir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for file in $$list2; do echo $$file; done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pykolab_clitelemetrydir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pykolab_clitelemetrydir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  $(am__py_compile) --destdir "$(DESTDIR)" \
	                    --basedir "$(pykolab_clitelemetrydir)" $$dlist; \
	else :; fi

uninstall-pykolab_clitelemetryPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(pykolab_clitelemetry_PYTHON)'; test -n "$(pykolab_clitelemetrydir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	dir='$(DESTDIR)$(pykolab_clitelemetrydir)'; \
	filesc=`echo "$$files" | sed 's|$$|c|'`; \
	fileso=`echo "$$files" | sed 's|$$|o|'`; \
	st=0; \
	for files in "$$files" "$$filesc" "$$fileso"; do \
	  $(am__uninstall_files_from_dir) || st=$$?; \
	done; \
	exit $$st
install-pykolab_confPYTHON: $(pykolab_conf_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(pykolab_confdir)" || $(MKDIR_P) "$(DESTDIR)$(pykolab_confdir)"
	@list='$(pykolab_conf_PYTHON)'; dlist=; list2=; test -n "$(pykolab_confdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for file in $$list2; do echo $$file; done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pykolab_confdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pykolab_confdir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  $(am__py_compile) --destdir "$(DESTDIR)" \
	                    --basedir "$(pykolab_confdir)" $$dlist; \
	else :; fi

uninstall-pykolab_confPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(pykolab_conf_PYTHON)'; test -n "$(pykolab_confdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	dir='$(DESTDIR)$(pykolab_confdir)'; \
	filesc=`echo "$$files" | sed 's|$$|c|'`; \
	fileso=`echo "$$files" | sed 's|$$|o|'`; \
	st=0; \
	for files in "$$files" "$$filesc" "$$fileso"; do \
	  $(am__uninstall_files_from_dir) || st=$$?; \
	done; \
	exit $$st
install-pykolab_imapPYTHON: $(pykolab_imap_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(pykolab_imapdir)" || $(MKDIR_P) "$(DESTDIR)$(pykolab_imapdir)"
	@list='$(pykolab_imap_PYTHON)'; dlist=; list2=; test -n "$(pykolab_imapdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for file in $$list2; do echo $$file; done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pykolab_imapdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pykolab_imapdir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  $(am__py_compile) --destdir "$(DESTDIR)" \
	                    --basedir "$(pykolab_imapdir)" $$dlist; \
	else :; fi

uninstall-pykolab_imapPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(pykolab_imap_PYTHON)'; test -n "$(pykolab_imapdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	dir='$(DESTDIR)$(pykolab_imapdir)'; \
	filesc=`echo "$$files" | sed 's|$$|c|'`; \
	fileso=`echo "$$files" | sed 's|$$|o|'`; \
	st=0; \
	for files in "$$files" "$$filesc" "$$fileso"; do \
	  $(am__uninstall_files_from_dir) || st=$$?; \
	done; \
	exit $$st
install-pykolab_pluginsPYTHON: $(pykolab_plugins_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(pykolab_pluginsdir)" || $(MKDIR_P) "$(DESTDIR)$(pykolab_pluginsdir)"
	@list='$(pykolab_plugins_PYTHON)'; dlist=; list2=; test -n "$(pykolab_pluginsdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for file in $$list2; do echo $$file; done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pykolab_pluginsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pykolab_pluginsdir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  $(am__py_compile) --destdir "$(DESTDIR)" \
	                    --basedir "$(pykolab_pluginsdir)" $$dlist; \
	else :; fi

uninstall-pykolab_pluginsPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(pykolab_plugins_PYTHON)'; test -n "$(pykolab_pluginsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	dir='$(DESTDIR)$(pykolab_pluginsdir)'; \
	filesc=`echo "$$files" | sed 's|$$|c|'`; \
	fileso=`echo "$$files" | sed 's|$$|o|'`; \
	st=0; \
	for files in "$$files" "$$filesc" "$$fileso"; do \
	  $(am__uninstall_files_from_dir) || st=$$?; \
	done; \
	exit $$st
install-pykolab_plugins_defaultfoldersPYTHON: $(pykolab_plugins_defaultfolders_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(pykolab_plugins_defaultfoldersdir)" || $(MKDIR_P) "$(DESTDIR)$(pykolab_plugins_defaultfoldersdir)"
	@list='$(pykolab_plugins_defaultfolders_PYTHON)'; dlist=; list2=; test -n "$(pykolab_plugins_defaultfoldersdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for file in $$list2; do echo $$file; done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pykolab_plugins_defaultfoldersdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pykolab_plugins_defaultfoldersdir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  $(am__py_compile) --destdir "$(DESTDIR)" \
	                    --basedir "$(pykolab_plugins_defaultfoldersdir)" $$dlist; \
	else :; fi

uninstall-pykolab_plugins_defaultfoldersPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(pykolab_plugins_defaultfolders_PYTHON)'; test -n "$(pykolab_plugins_defaultfoldersdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	dir='$(DESTDIR)$(pykolab_plugins_defaultfoldersdir)'; \
	filesc=`echo "$$files" | sed 's|$$|c|'`; \
	fileso=`echo "$$files" | sed 's|$$|o|'`; \
	st=0; \
	for files in "$$files" "$$filesc" "$$fileso"; do \
	  $(am__uninstall_files_from_dir) || st=$$?; \
	done; \
	exit $$st
install-pykolab_plugins_dynamicquotaPYTHON: $(pykolab_plugins_dynamicquota_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(pykolab_plugins_dynamicquotadir)" || $(MKDIR_P) "$(DESTDIR)$(pykolab_plugins_dynamicquotadir)"
	@list='$(pykolab_plugins_dynamicquota_PYTHON)'; dlist=; list2=; test -n "$(pykolab_plugins_dynamicquotadir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for file in $$list2; do echo $$file; done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pykolab_plugins_dynamicquotadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pykolab_plugins_dynamicquotadir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  $(am__py_compile) --destdir "$(DESTDIR)" \
	                    --basedir "$(pykolab_plugins_dynamicquotadir)" $$dlist; \
	else :; fi

uninstall-pykolab_plugins_dynamicquotaPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(pykolab_plugins_dynamicquota_PYTHON)'; test -n "$(pykolab_plugins_dynamicquotadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	dir='$(DESTDIR)$(pykolab_plugins_dynamicquotadir)'; \
	filesc=`echo "$$files" | sed 's|$$|c|'`; \
	fileso=`echo "$$files" | sed 's|$$|o|'`; \
	st=0; \
	for files in "$$files" "$$filesc" "$$fileso"; do \
	  $(am__uninstall_files_from_dir) || st=$$?; \
	done; \
	exit $$st
install-pykolab_plugins_recipientpolicyPYTHON: $(pykolab_plugins_recipientpolicy_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(pykolab_plugins_recipientpolicydir)" || $(MKDIR_P) "$(DESTDIR)$(pykolab_plugins_recipientpolicydir)"
	@list='$(pykolab_plugins_recipientpolicy_PYTHON)'; dlist=; list2=; test -n "$(pykolab_plugins_recipientpolicydir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for file in $$list2; do echo $$file; done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pykolab_plugins_recipientpolicydir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pykolab_plugins_recipientpolicydir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  $(am__py_compile) --destdir "$(DESTDIR)" \
	                    --basedir "$(pykolab_plugins_recipientpolicydir)" $$dlist; \
	else :; fi

uninstall-pykolab_plugins_recipientpolicyPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(pykolab_plugins_recipientpolicy_PYTHON)'; test -n "$(pykolab_plugins_recipientpolicydir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	dir='$(DESTDIR)$(pykolab_plugins_recipientpolicydir)'; \
	filesc=`echo "$$files" | sed 's|$$|c|'`; \
	fileso=`echo "$$files" | sed 's|$$|o|'`; \
	st=0; \
	for files in "$$files" "$$filesc" "$$fileso"; do \
	  $(am__uninstall_files_from_dir) || st=$$?; \
	done; \
	exit $$st
install-pykolab_setupPYTHON: $(pykolab_setup_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(pykolab_setupdir)" || $(MKDIR_P) "$(DESTDIR)$(pykolab_setupdir)"
	@list='$(pykolab_setup_PYTHON)'; dlist=; list2=; test -n "$(pykolab_setupdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for file in $$list2; do echo $$file; done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pykolab_setupdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pykolab_setupdir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  $(am__py_compile) --destdir "$(DESTDIR)" \
	                    --basedir "$(pykolab_setupdir)" $$dlist; \
	else :; fi

uninstall-pykolab_setupPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(pykolab_setup_PYTHON)'; test -n "$(pykolab_setupdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	dir='$(DESTDIR)$(pykolab_setupdir)'; \
	filesc=`echo "$$files" | sed 's|$$|c|'`; \
	fileso=`echo "$$files" | sed 's|$$|o|'`; \
	st=0; \
	for files in "$$files" "$$filesc" "$$fileso"; do \
	  $(am__uninstall_files_from_dir) || st=$$?; \
	done; \
	exit $$st
install-pykolab_testsPYTHON: $(pykolab_tests_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(pykolab_testsdir)" || $(MKDIR_P) "$(DESTDIR)$(pykolab_testsdir)"
	@list='$(pykolab_tests_PYTHON)'; dlist=; list2=; test -n "$(pykolab_testsdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for file in $$list2; do echo $$file; done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pykolab_testsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pykolab_testsdir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  $(am__py_compile) --destdir "$(DESTDIR)" \
	                    --basedir "$(pykolab_testsdir)" $$dlist; \
	else :; fi

uninstall-pykolab_testsPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(pykolab_tests_PYTHON)'; test -n "$(pykolab_testsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	dir='$(DESTDIR)$(pykolab_testsdir)'; \
	filesc=`echo "$$files" | sed 's|$$|c|'`; \
	fileso=`echo "$$files" | sed 's|$$|o|'`; \
	st=0; \
	for files in "$$files" "$$filesc" "$$fileso"; do \
	  $(am__uninstall_files_from_dir) || st=$$?; \
	done; \
	exit $$st
install-pykolab_tests_imapPYTHON: $(pykolab_tests_imap_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(pykolab_tests_imapdir)" || $(MKDIR_P) "$(DESTDIR)$(pykolab_tests_imapdir)"
	@list='$(pykolab_tests_imap_PYTHON)'; dlist=; list2=; test -n "$(pykolab_tests_imapdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for file in $$list2; do echo $$file; done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pykolab_tests_imapdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pykolab_tests_imapdir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  $(am__py_compile) --destdir "$(DESTDIR)" \
	                    --basedir "$(pykolab_tests_imapdir)" $$dlist; \
	else :; fi

uninstall-pykolab_tests_imapPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(pykolab_tests_imap_PYTHON)'; test -n "$(pykolab_tests_imapdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	dir='$(DESTDIR)$(pykolab_tests_imapdir)'; \
	filesc=`echo "$$files" | sed 's|$$|c|'`; \
	fileso=`echo "$$files" | sed 's|$$|o|'`; \
	st=0; \
	for files in "$$files" "$$filesc" "$$fileso"; do \
	  $(am__uninstall_files_from_dir) || st=$$?; \
	done; \
	exit $$st
install-pykolab_tests_wapPYTHON: $(pykolab_tests_wap_PYTHON)
	@$(NORMAL_INSTALL)
	test -z "$(pykolab_tests_wapdir)" || $(MKDIR_P) "$(DESTDIR)$(pykolab_tests_wapdir)"
	@list='$(pykolab_tests_wap_PYTHON)'; dlist=; list2=; test -n "$(pykolab_tests_wapdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then b=; else b="$(srcdir)/"; fi; \
	  if test -f $$b$$p; then \
	    $(am__strip_dir) \
	    dlist="$$dlist $$f"; \
	    list2="$$list2 $$b$$p"; \
	  else :; fi; \
	done; \
	for file in $$list2; do echo $$file; done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pykolab_tests_wapdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pykolab_tests_wapdir)" || exit $$?; \
	done || exit $$?; \
	if test -n "$$dlist"; then \
	  $(am__py_compile) --destdir "$(DESTDIR)" \
	                    --basedir "$(pykolab_tests_wapdir)" $$dlist; \
	else :; fi

uninstall-pykolab_tests_wapPYTHON:
	@$(NORMAL_UNINSTALL)
	@list='$(pykolab_tests_wap_PYTHON)'; test -n "$(pykolab_tests_wapdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	dir='$(DESTDIR)$(pykolab_tests_wapdir)'; \
	filesc=`echo "$$files" | sed 's|$$|c|'`; \
	fileso=`echo "$$files" | sed 's|$$|o|'`; \
	st=0; \
	for files in "$$files" "$$filesc" "$$fileso"; do \
	  $(am__uninstall_files_from_dir) || st=$$?; \
	done; \
	exit $$st
tags: TAGS
TAGS:

ctags: CTAGS
CTAGS:


distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile
installdirs:
	for dir in "$(DESTDIR)$(pykolabdir)" "$(DESTDIR)$(pykolab_authdir)" "$(DESTDIR)$(pykolab_auth_ldapdir)" "$(DESTDIR)$(pykolab_clidir)" "$(DESTDIR)$(pykolab_clitelemetrydir)" "$(DESTDIR)$(pykolab_confdir)" "$(DESTDIR)$(pykolab_imapdir)" "$(DESTDIR)$(pykolab_pluginsdir)" "$(DESTDIR)$(pykolab_plugins_defaultfoldersdir)" "$(DESTDIR)$(pykolab_plugins_dynamicquotadir)" "$(DESTDIR)$(pykolab_plugins_recipientpolicydir)" "$(DESTDIR)$(pykolab_setupdir)" "$(DESTDIR)$(pykolab_testsdir)" "$(DESTDIR)$(pykolab_tests_imapdir)" "$(DESTDIR)$(pykolab_tests_wapdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-pykolabPYTHON install-pykolab_authPYTHON \
	install-pykolab_auth_ldapPYTHON install-pykolab_cliPYTHON \
	install-pykolab_clitelemetryPYTHON install-pykolab_confPYTHON \
	install-pykolab_imapPYTHON install-pykolab_pluginsPYTHON \
	install-pykolab_plugins_defaultfoldersPYTHON \
	install-pykolab_plugins_dynamicquotaPYTHON \
	install-pykolab_plugins_recipientpolicyPYTHON \
	install-pykolab_setupPYTHON install-pykolab_testsPYTHON \
	install-pykolab_tests_imapPYTHON \
	install-pykolab_tests_wapPYTHON

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-pykolabPYTHON uninstall-pykolab_authPYTHON \
	uninstall-pykolab_auth_ldapPYTHON uninstall-pykolab_cliPYTHON \
	uninstall-pykolab_clitelemetryPYTHON \
	uninstall-pykolab_confPYTHON uninstall-pykolab_imapPYTHON \
	uninstall-pykolab_pluginsPYTHON \
	uninstall-pykolab_plugins_defaultfoldersPYTHON \
	uninstall-pykolab_plugins_dynamicquotaPYTHON \
	uninstall-pykolab_plugins_recipientpolicyPYTHON \
	uninstall-pykolab_setupPYTHON uninstall-pykolab_testsPYTHON \
	uninstall-pykolab_tests_imapPYTHON \
	uninstall-pykolab_tests_wapPYTHON

.MAKE: install-am install-strip

.PHONY: all all-am check check-am clean clean-generic distclean \
	distclean-generic distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-pykolabPYTHON install-pykolab_authPYTHON \
	install-pykolab_auth_ldapPYTHON install-pykolab_cliPYTHON \
	install-pykolab_clitelemetryPYTHON install-pykolab_confPYTHON \
	install-pykolab_imapPYTHON install-pykolab_pluginsPYTHON \
	install-pykolab_plugins_defaultfoldersPYTHON \
	install-pykolab_plugins_dynamicquotaPYTHON \
	install-pykolab_plugins_recipientpolicyPYTHON \
	install-pykolab_setupPYTHON install-pykolab_testsPYTHON \
	install-pykolab_tests_imapPYTHON \
	install-pykolab_tests_wapPYTHON install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-generic pdf \
	pdf-am ps ps-am uninstall uninstall-am uninstall-pykolabPYTHON \
	uninstall-pykolab_authPYTHON uninstall-pykolab_auth_ldapPYTHON \
	uninstall-pykolab_cliPYTHON \
	uninstall-pykolab_clitelemetryPYTHON \
	uninstall-pykolab_confPYTHON uninstall-pykolab_imapPYTHON \
	uninstall-pykolab_pluginsPYTHON \
	uninstall-pykolab_plugins_defaultfoldersPYTHON \
	uninstall-pykolab_plugins_dynamicquotaPYTHON \
	uninstall-pykolab_plugins_recipientpolicyPYTHON \
	uninstall-pykolab_setupPYTHON uninstall-pykolab_testsPYTHON \
	uninstall-pykolab_tests_imapPYTHON \
	uninstall-pykolab_tests_wapPYTHON


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
